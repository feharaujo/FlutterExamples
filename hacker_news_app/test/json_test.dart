import 'dart:convert';

import 'package:flutter_test/flutter_test.dart';
import 'package:hacker_news_app/data/article.dart';
import 'package:http/http.dart' as http;

void main() {
  test("parse top stories json", () {
    const jsonString =
        "[21303446,21302498,21303181,21303003,21283907,21302347,21303618,21301467,21303435,21302412,21301388,21301784,21303770,21294155,21301851,21301890,21299546,21303173,21301877,21302123,21303298,21278585,21300962,21302825,21302244,21298383,21301604,21301374,21297462,21300476,21303142,21278790,21292291,21295489,21298227,21299086,21300188,21298233,21299960,21293505,21289827,21297639,21300191,21299768,21299032,21300336,21293891,21298341,21299610,21302747,21301247,21299102,21298472,21303283,21293941,21301254,21301633,21293876,21289832,21294354,21298470,21279018,21298637,21298920,21301523,21295942,21301628,21286379,21293859,21300052,21297499,21302312,21298399,21297868,21301382,21299127,21293734,21293132,21294976,21298830,21295079,21297893,21296167,21300529,21300822,21301665,21288185,21280205,21292497,21293452,21298006,21302798,21303057,21298306,21281525,21290388,21298304,21295149,21297165,21298878,21300902,21283835,21297664,21302237,21300860,21297876,21299983,21280918,21302114,21286640,21278755,21278715,21292205,21300748,21297880,21284770,21300669,21296261,21277580,21290881,21295729,21294621,21281025,21285329,21288029,21278924,21292191,21298394,21286192,21287944,21301119,21299318,21300689,21288663,21291510,21301958,21295097,21288195,21298620,21301440,21301930,21281042,21285419,21286898,21280202,21288988,21302582,21298729,21290813,21302304,21280092,21278786,21280429,21290306,21281411,21290785,21287736,21295516,21279756,21299321,21293189,21289237,21280041,21299614,21293497,21300005,21293827,21292860,21301805,21281724,21279366,21289531,21283791,21293852,21291579,21299468,21293397,21291518,21296323,21280352,21290200,21291131,21289456,21283838,21279945,21286319,21282647,21292476,21283994,21295117,21287924,21293544,21278630,21297789,21289251,21283861,21292445,21288415,21289104,21301712,21296622,21301711,21292472,21295853,21300817,21287275,21301677,21278839,21301323,21297178,21286104,21282680,21282009,21287498,21298692,21298075,21291342,21297837,21288280,21297733,21282699,21299008,21278705,21293838,21285145,21297506,21278948,21288060,21290643,21278048,21287267,21278360,21300422,21279725,21295849,21299171,21299911,21277690,21290589,21295575,21286806,21280238,21289074,21286973,21278009,21285728,21296565,21299277,21285146,21289920,21281533,21279752,21284387,21296259,21289201,21285127,21288807,21286574,21296855,21289943,21299722,21286074,21291935,21283644,21289337,21298369,21284962,21280256,21286229,21300381,21294499,21296612,21283651,21282179,21289899,21294187,21283216,21299762,21281195,21284255,21284466,21292461,21293025,21298489,21292999,21287354,21290582,21285376,21299593,21295368,21281296,21283528,21281541,21297279,21297221,21297839,21278269,21292536,21296417,21282609,21302284,21289786,21294327,21297554,21292533,21286537,21286054,21289605,21298385,21285609,21298163,21286200,21288660,21283635,21292281,21287955,21297134,21288421,21291842,21278960,21293272,21278152,21291210,21296954,21294569,21295932,21290657,21289563,21295756,21282982,21287412,21280087,21296799,21284032,21297564,21293281,21279778,21295305,21295234,21292986,21285907,21285638,21296271,21290839,21296197,21294419,21284241,21278627,21294286,21282110,21296499,21295874,21297053,21283074,21284896,21293350,21289443,21296951,21282372,21286177,21281644,21295556,21292793,21300013,21286982,21294783,21297199,21288268,21279515,21286597,21284312,21296294,21293606,21292881,21285032,21292650,21292605,21277804,21289637,21298217,21290508,21295708,21279720,21290096,21283221,21291593,21291241,21287642,21287599,21287526,21279022,21290651,21294932,21290602,21281192,21294882,21294802,21279568,21294519,21294613,21288158,21285807,21285793,21292554,21282843,21289941,21281024,21281640,21284987,21284567,21290739,21290564,21287710,21283988,21282556,21292112,21286991,21281783,21286871,21286694,21286492,21289570,21289560,21286291,21289313,21278342,21289050,21280841,21288511,21283153,21288265,21277729,21287344,21286674,21286262,21286254,21284159,21289611,21284912,21284840,21283382,21283189,21293588,21282612,21284050,21298539,21288048,21278734,21296033,21283398,21277935,21280066,21279016,21284743,21282812,21292706,21280295,21279655,21280302,21278253,21283421,21285083,21286435,21284765,21288544,21287957,21279206,21287337,21278171,21292727,21285543,21290186,21292630,21292713,21294040,21291282,21296674,21293853,21292991,21288190,21288420,21298775,21278194,21280337,21293550,21303253]";
    expect(parseTopStories(jsonString).first, 21303446);
  });

  test("parse first item json", () {
    const jsonString =
        """{"by":"ttsiodras","descendants":14,"id":21303446,"kids":[21303755,21303689,21303891,21304063,21303737],"score":88,"time":1571570114,"title":"Compiling my own SPARC CPU inside a cheap FPGA","type":"story","url":"https://www.thanassis.space/myowncpu.html"}""";
    expect(parseArticle(jsonString).by, "ttsiodras");
  });

  test("parse item over network", () async {
    final url = "https://hacker-news.firebaseio.com/v0/beststories.json";
    final res = await http.get(url);
    if (res.statusCode == 200) {
      final idList = json.decode(res.body) as List;
      if (idList.isNotEmpty) {
        final firstStory = idList.first;
        final storyUrl =
            "https://hacker-news.firebaseio.com/v0/item/{$firstStory}.json";
        final storyRes = await http.get(storyUrl);
        if (storyRes.statusCode == 200) {
          expect(parseArticle(storyRes.body).by, "robert-boehnke");
        }
      }
    }
  });
}
